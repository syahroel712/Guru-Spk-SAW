backup analisa contoller

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Kriteria_Penilaian_Model;
use App\Guru_Model;
use App\Sekolah_Model;
use DB;
use Illuminate\Support\Facades\Validator;

class AnalisaController extends Controller
{
    public function index()
    {
        // tampikan semua data
        // $kriteria_penilaian = DB::table('tb_penilaian')
        //                     ->join('tb_guru', 'tb_guru.guru_id', '=', 'tb_penilaian.guru_id')
        //                     ->join('tb_sekolah', 'tb_sekolah.sekolah_id', '=', 'tb_guru.guru_id')
        //                     ->select('tb_penilaian.*', 'tb_sekolah.sekolah_nama', 'tb_guru.guru_nama')
        //                     ->selectRaw('(tb_penilaian.penilaian_portofolio + tb_penilaian.penilaian_presentasi + tb_penilaian.penilaian_wawancara + tb_penilaian.penilaian_tes_tulis) as total')
        //                     ->orderBy('total', 'DESC')
        //                     ->orderBy('tb_penilaian.penilaian_tes_tulis', 'DESC')
        //                     ->get();

        $kriteria_penilaian = DB::table('tb_penilaian')
                            ->join('tb_guru', 'tb_guru.guru_id', '=', 'tb_penilaian.guru_id')
                            ->join('tb_sekolah', 'tb_sekolah.sekolah_id', '=', 'tb_guru.guru_id')
                            ->select('tb_penilaian.*', 'tb_sekolah.sekolah_nama', 'tb_guru.guru_nama')
                            ->selectRaw('(tb_penilaian.penilaian_portofolio + tb_penilaian.penilaian_presentasi + tb_penilaian.penilaian_wawancara + tb_penilaian.penilaian_tes_tulis) as total')
                            ->get();

        // tampilkan data nilai tertinggi
        $nilai_tertinggi = DB::table('tb_penilaian')
                            ->selectRaw("MAX(penilaian_portofolio) as penilaian_portofolio")
                            ->selectRaw("MAX(penilaian_presentasi) as penilaian_presentasi")
                            ->selectRaw("MAX(penilaian_wawancara) as penilaian_wawancara")
                            ->selectRaw("MAX(penilaian_tes_tulis) as penilaian_tes_tulis")
                            ->first();        
        // dd($nilai_tertinggi);

        
        // tampilkan bobot dari kriteria
        $bobot = DB::table('tb_kriteria')->select('kriteria_bobot')->get();
        $tmp = [];
        foreach ($bobot as $s) {
            $tmp[] = $s->kriteria_bobot;
        }


        // foreach($kriteria_penilaian_akhir as $no => $penilaian){
        //     for ($i=0; $i < count($tmp) ; $i++) { 
        //         $kriteria_penilaian_akhir[$no]->nilai =
        //             (round($penilaian->penilaian_portofolio / $nilai_tertinggi->penilaian_portofolio, 2) * $tmp[$i]) + 
        //             (round($penilaian->penilaian_presentasi / $nilai_tertinggi->penilaian_presentasi, 2) * $tmp[$i]) +
        //             (round($penilaian->penilaian_wawancara / $nilai_tertinggi->penilaian_wawancara, 2) * $tmp[$i]) +
        //             (round($penilaian->penilaian_tes_tulis / $nilai_tertinggi->penilaian_tes_tulis, 2) * $tmp[$i])
        //         ;
        //     }
        // }
        // $array = [];
        // foreach($kriteria_penilaian_akhir as $no=>$penilaian){
        //     $array[$no] = $penilaian->nilai;
        // }
        // $i=1;
        // foreach($array as $key=>$values)
        // {            
        //     $max = max($array);   
        //     $keys = array_search($max, $array);
        //     $kriteria_penilaian_akhir[$keys]->rank= $i;  
        //     unset($array[$keys]);
        //     if(sizeof($array) >0)
        //     if(!in_array($max,$array))
        //         $i++;
        // }
        
        return view(
            'page/analisa/index',
            [
                'kriteria_penilaian' => $kriteria_penilaian,
                'nilai_tertinggi' => $nilai_tertinggi,
                'bobot' => $tmp,
            ]
        );
    }
}
=============================================================================================================
